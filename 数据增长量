SELECT TBS_NAME AS "表空间名",
(SELECT * FROM (SELECT TOTAL_MB / 1024 FROM V$ASM_DISKGROUP ORDER BY TOTAL_MB DESC) WHERE ROWNUM <= 1) AS "当前容量GB"，
(SELECT * FROM (SELECT FREE_MB / 1024 FROM V$ASM_DISKGROUP ORDER BY TOTAL_MB DESC) WHERE ROWNUM <= 1) AS "ASM剩余容量GB"，
(SELECT * FROM (SELECT FREE_MB / 1024  FROM V$ASM_DISKGROUP ORDER BY TOTAL_MB DESC) WHERE ROWNUM <= 1) - LOGSIZE AS "排除日志ASM剩余容量GB"，
INC AS "日增长量GB"，
CEIL((TBS_LEFT+ASM_LEFT-LOGSIZE)/INC) AS "可用天数" ,
(select CREATE_DATE   from (select total_mb,CREATE_DATE  from v$asm_disk_stat order by create_date desc) where rownum <=1) AS "上次扩容时间"，
(select CEIL( total_mb / 1024 )  from ( select total_mb , CREATE_DATE  from v$asm_disk_stat order by create_date desc) where rownum <=1) AS "上次扩容GB",
CEIL(180 * INC - (TBS_LEFT+ASM_LEFT-LOGSIZE)) AS "需要扩容GB" 
FROM ( SELECT NAME AS TBS_NAME,ROUND(DAY_DELTA_INC_GB,2) AS INC, ROUND(TABLESPACE_LEFT_SIZE_GB,2) AS TBS_LEFT, (SELECT ROUND(FREE_MB/1024,2) AS ASMFREE FROM (SELECT * FROM V$ASM_DISKGROUP ORDER BY  TOTAL_MB DESC) WHERE ROWNUM <=1 ) AS ASM_LEFT, 
(SELECT ROUND(MAX(BYTES)/1024/1024/1024,2) LOGSIZE FROM V$LOG) * (SELECT ROUND(MAX(TOTAL) / &backup_times_per_day,2) AS LOGNUM  FROM (SELECT TRUNC(FIRST_TIME) "DATE",TO_CHAR(FIRST_TIME, 'DY') "DAY", COUNT(1) AS TOTAL FROM V$LOG_HISTORY GROUP BY TRUNC(FIRST_TIME), TO_CHAR(FIRST_TIME, 'DY'))) AS LOGSIZE FROM  
(WITH T2 AS (SELECT * FROM (SELECT A.TABLESPACE_USEDSIZE, A.SNAP_ID, A.TABLESPACE_ID, B.END_INTERVAL_TIME, RANK () OVER (PARTITION BY TABLESPACE_ID ORDER BY B.END_INTERVAL_TIME DESC) RANK FROM DBA_HIST_TBSPC_SPACE_USAGE A JOIN DBA_HIST_SNAPSHOT B ON A.SNAP_ID = B.SNAP_ID WHERE B.INSTANCE_NUMBER = 1) WHERE RANK <= 1), T1 AS (SELECT * FROM (SELECT A.TABLESPACE_USEDSIZE, A.SNAP_ID, A.TABLESPACE_ID, B.END_INTERVAL_TIME, RANK () OVER (PARTITION BY TABLESPACE_ID ORDER BY B.END_INTERVAL_TIME ASC) RANK FROM DBA_HIST_TBSPC_SPACE_USAGE A JOIN DBA_HIST_SNAPSHOT B ON A.SNAP_ID = B.SNAP_ID WHERE B.INSTANCE_NUMBER = 1) WHERE RANK <= 1) SELECT NAME, DURING_TIME, DAY_DELTA_INC_GB, TABLESPACE_SIZE_GB, "USED%", TABLESPACE_LEFT_SIZE_GB, T5.AUTOEXTENSIBLE, CASE WHEN (TO_DIE_DAYS <> 'N/A' AND T5.AUTOEXTENSIBLE IS NULL) THEN TO_CHAR (TO_DIE_DAYS) ELSE 'N/A' END AS "TO_DIE_DAYS" FROM (SELECT NAME, DURING_TIME, DAY_DELTA_INC_GB, TABLESPACE_SIZE_GB, "USED%", TABLESPACE_LEFT_SIZE_GB, DECODE (GOING_TO_DIE_DAYS, NULL, 'N/A', GOING_TO_DIE_DAYS) TO_DIE_DAYS FROM ( SELECT NAME, DURING_TIME, DAY_DELTA_INC_GB, ( TABLESPACE_SIZE * (SELECT VALUE FROM V$SYSTEM_PARAMETER WHERE NAME = 'db_block_size') / 1024 / 1024 / 1024) TABLESPACE_SIZE_GB, "USED%", ( (TABLESPACE_SIZE - TABLESPACE_USEDSIZE) * (SELECT VALUE FROM V$SYSTEM_PARAMETER WHERE NAME = 'db_block_size') / 1024 / 1024 / 1024) TABLESPACE_LEFT_SIZE_GB, CASE WHEN (DAY_DELTA_INC_GB) > 0 THEN ROUND ( (TABLESPACE_SIZE - TABLESPACE_USEDSIZE) * (SELECT VALUE FROM V$SYSTEM_PARAMETER WHERE NAME = 'db_block_size') / 1024 / 1024 / 1024 / DAY_DELTA_INC_GB) ELSE NULL END AS "GOING_TO_DIE_DAYS" FROM (SELECT T3.NAME, TO_CHAR (T1.END_INTERVAL_TIME, 'YYYY-MM-DD_HH24:MI:SS') || '~' || TO_CHAR (T2.END_INTERVAL_TIME, 'YYYY-MM-DD_HH24:MI:SS') "DURING_TIME", ( T2.TABLESPACE_USEDSIZE - T1.TABLESPACE_USEDSIZE) * (SELECT VALUE FROM V$SYSTEM_PARAMETER WHERE NAME = 'db_block_size') / 1024 / 1024 / 1024 / (ROUND ( TO_NUMBER ( CAST (T2.END_INTERVAL_TIME AS DATE) - CAST (T1.END_INTERVAL_TIME AS DATE)))) AS "DAY_DELTA_INC_GB", ROUND ( T4.TABLESPACE_USEDSIZE / T4.TABLESPACE_SIZE * 100, 2) "USED%", T4.TABLESPACE_SIZE, T4.TABLESPACE_MAXSIZE, T4.TABLESPACE_USEDSIZE FROM T1 JOIN T2 ON T1.TABLESPACE_ID = T2.TABLESPACE_ID JOIN V$TABLESPACE T3 ON T1.TABLESPACE_ID = T3.TS# AND T2.TABLESPACE_ID = T3.TS# JOIN DBA_HIST_TBSPC_SPACE_USAGE T4 ON T1.TABLESPACE_ID = T4.TABLESPACE_ID AND T4.TABLESPACE_ID = T3.TS# AND T4.SNAP_ID = T2.SNAP_ID) ORDER BY GOING_TO_DIE_DAYS ASC)) LEFT JOIN (SELECT DISTINCT TABLESPACE_NAME, AUTOEXTENSIBLE FROM DBA_TEMP_FILES WHERE AUTOEXTENSIBLE = 'YES' UNION SELECT DISTINCT TABLESPACE_NAME, AUTOEXTENSIBLE FROM DBA_DATA_FILES WHERE AUTOEXTENSIBLE = 'YES') T5 ON T5.TABLESPACE_NAME = NAME) ORDER BY DAY_DELTA_INC_GB DESC)  WHERE ROWNUM<=1
